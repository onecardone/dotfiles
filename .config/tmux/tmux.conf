# XDG_CONFIG_HOME (.config/tmux/tmux.conf) recommended

# -- basics --------------------------------------------------------------------

# prefix key (default is CTRL+B which is C-b in this config file)
# uncomment the next line and change C-b to whatever you like
# bind C-b send-prefix

# you can unbind C-b if you dont like it being a prefix 
# unbind C-b

# tmux saves your keybinds cumulatively which is annoying most of the time
# reset your entire config by running the following lines in a shell prompt:
# tmux -f /dev/null -L temp start-server \; list-keys > ~/.tmux.reset.conf
# source ~/.tmux.reset.conf

# If that doesn't work, try running this command and then restarting tmux 
# unbind -a

# you can also unbind keys manually in command mode with
# :unbind <key>
# or via the shell
# tmux unbind <key>

# check your keybinds through the shell prompt by running
# tmux lsk

# or via tmux command mode
# :lsk

# which is short for list-keys


# -- general -------------------------------------------------------------------

setw -g xterm-keys on						# can do X-commands which are used later in this file
set -s escape-time 10           # faster command sequences
set -g history-limit 10000      # increase history limit

# reload configuration with prefix r
bind r source-file "~/.config/tmux/tmux.conf" \; display-message "config reloaded"

# edit config file with prefix v
bind v split-window -h "vim $HOME/.config/tmux/tmux.conf"

# dont close tmux when closing sessions
set-option -g detach-on-destroy off

# -- buffers -------------------------------------------------------------------

bind b list-buffers             # list buffers
bind B choose-buffer            # choose which buffer to paste from
bind p paste-buffer	            # paste from the most recent buffer
bind P choose-buffer            # choose which buffer to paste from

# -- display -------------------------------------------------------------------

set -g base-index 1             # start windows numbering at 1
setw -g pane-base-index 1       # make pane numbering consistent with windows

setw -g automatic-rename on     # rename window to reflect current program
set -g renumber-windows on      # renumber windows when a window is closed

set -g set-titles on            # set terminal title

set -g display-panes-time 3000  # longer pane indicator display time (prefix q)
set -g display-time 3000        # longer status bar message display time 

set -g status-interval 10       # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# clear screen only
# bind -n C-l send-keys C-l

# activity
set -g monitor-activity on
set -g visual-activity off

# -- session and window navigation ---------------------------------------------

# create session
bind C-c new-session

# find session
# bind C-f command-prompt -p find-session 'switch-client -t %%'
# CTRL+F is overriden for me

# split current window horizontally
bind _ split-window -v

# split current window vertically
bind - split-window -h

# -- pane navigation -----------------------------------------------------------

bind -r h select-pane -L        # move left
bind -r j select-pane -D        # move down
bind -r k select-pane -U        # move up
bind -r l select-pane -R        # move right
bind > swap-pane -D             # swap current pane with the next one
bind < swap-pane -U             # swap current pane with the previous one

# -- pane resizing -------------------------------------------------------------

bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# -- window navigation ---------------------------------------------------------

bind -r C-h previous-window     # select previous window
bind -r C-l next-window         # select next window
bind Tab last-window            # move to last active window

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode 						# enter copy mode

# vim controls in copy mode
setw -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi y send -X copy-selection-and-cancel

bind -T copy-mode-vi Escape send -X cancel
# bind -T copy-mode-vi H 			send -X start-of-line
# bind -T copy-mode-vi L 			send -X end-of-line

# default ctrl+c and ctrl+v behavior
bind -T copy-mode-vi C-c if-shell "#{selection_present}" "send -X copy-selection-and-cancel" "send -X cancel"

# -- mouse settings ------------------------------------------------------------

# start with mouse mode enabled
set -g mouse on

# dont clear highlighted selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X selection-no-clear 

# restore modern right click behavior
bind -T copy-mode-vi MouseDown3Pane send -X copy-selection-and-cancel
unbind -T root MouseDown3Pane
bind -T root MouseDown3Pane paste-buffer # paste from the most recent buffer

# double click to highlight (no copy)
bind -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-word"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word

# same for triple click
bind -T root TripleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-line"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send-keys -X select-line


# -- extra settings ------------------------------------------------------------

# force vi mode
#   You should export VISUAL or EDITOR environment variable instead, see manual
# set -g status-keys vi
# set -g mode-keys vi
